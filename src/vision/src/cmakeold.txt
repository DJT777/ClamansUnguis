cmake_minimum_required(VERSION 3.0.2)
project(yolo_trt VERSION 1.0)

set(CMAKE_CUDA_COMPILER /usr/local/cuda/bin/nvcc)
set(CMAKE_CUDA_ARCHITECTURES all)

enable_language(CUDA)

set(CMAKE_CXX_COMPILER "/usr/bin/g++")
set(CMAKE_CXX_STANDARD 14)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -O3 -Wno-write-strings")
set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -Wl,-rpath -Wl,$ORIGIN")

find_package(catkin REQUIRED COMPONENTS
        roscpp
        roslib
        )

catkin_package()

find_package(CUDA REQUIRED)
find_package(OpenCV REQUIRED)

include_directories(
        ${catkin_INCLUDE_DIRS}
        ${OpenCV_INCLUDE_DIRS}
        ${CUDA_TOOLKIT_ROOT_DIR}/include
        src/extra
        src/modules
)

file(GLOB_RECURSE sources src/modules/*.hpp src/modules/*.cpp src/modules/*.h src/modules/*.cu src/extra/*.h)

add_library(detector SHARED ${sources})
target_include_directories(detector PRIVATE src/extra/ src/modules/ ${OpenCV_INCLUDE_DIRS} ${CUDA_TOOLKIT_ROOT_DIR}/include)
target_link_libraries(detector nvinfer nvinfer_plugin nvparsers "stdc++fs")

add_executable(yolo_trt src/samples/sample_detector.cpp)
target_include_directories(yolo_trt PRIVATE src/modules/ src/extra/)
target_link_libraries(yolo_trt
        detector
        ${OpenCV_LIBS}
        ${catkin_LIBRARIES}
        )
